grf {
		grfid: "FS\00\00";
		name: string(STR_GRF_NAME);
		desc: string(STR_GRF_DESCRIPTION);
		version: 0;
		min_compatible_version: 0;
		
		param {
        param_spawn_game {
            type: bool;
            def_value: 0;
            name: string(STR_PARAM_NAME_SPAWN_DURING_GAME);
            desc: string(STR_PARAM_DESC_SPAWN_DURING_GAME);
        }
		}
}

//# 1 "clay_pit.nml" 1

cargotable {
	PASS,
	COAL,
	MAIL,
	OIL_,
	LVST,
	GOOD,
	GRAI,
	WOOD,
	IORE,
	STEL,
	VALU,
	PAPR,
	WHEA,
	FOOD,
	GOLD,
	RUBR,
	FRUT,
	MAIZ,
	CORE,
	WATR,
	DIAM,
	BATT,
	BUBL,
	COLA,
	FZDR,
	PLST,
	SWET,
	SUGR,
	TOFF,
	TOYS,
	CLAY,
	BRCK,
	SUPP,
	ALOY,
	CHEM,
}

//sprites; define before anything that needs them
spriteset(SPRITESET_FLATBED_TRK_EMPTY, "gfx/flatbed_example.png") {
	//left_x, upper_y, width, height, offset_x, offset_y
    [ 0,      0,        8,    18,      -3,       -10]
    [ 16,     0,       20,    16,     -14,        -7]
    [ 48,     0,       28,    12,     -14,        -6]
    [ 96,     0,       20,    16,      -6,        -7]
    [ 128,    0,        8,    18,      -3,       -10]
    [ 144,    0,       20,    16,     -14,        -7]
    [ 176,    0,       28,    12,     -14,        -6]
    [ 224,    0,       20,    16,      -6,        -7]
}

spriteset(SPRITESET_FLATBED_TRK_FULL, "gfx/flatbed_example.png") {
	[ 260,    0,        8,    18,      -3,      -10]
    [ 276,    0,       20,    16,     -14,       -7]
    [ 308,    0,       28,    12,     -14,       -6]
    [ 356,    0,       20,    16,      -6,       -7]
    [ 388,    0,        8,    18,      -3,      -10]
    [ 404,    0,       20,    16,     -14,       -7]
    [ 436,    0,       28,    12,     -14,       -6]
    [ 484,    0,       20,    16,      -6,       -7]
}

spritegroup spritegroup_flatbed_truck_1_goods {
	loaded: [SPRITESET_FLATBED_TRK_EMPTY, SPRITESET_FLATBED_TRK_FULL];
	loading: [SPRITESET_FLATBED_TRK_EMPTY, SPRITESET_FLATBED_TRK_FULL];
}

spriteset(SPRITESET_BULK_UNLOADED, "gfx/vehiclesroad01.png") {
    [370, 264,  8, 18,  -3, -10]
    [386, 264, 20, 16, -14,  -7]
    [418, 264, 28, 12, -14,  -6]
    [466, 264, 20, 16,  -6,  -7]
    [498, 264,  8, 18,  -3, -10]
    [514, 264, 20, 16, -14,  -7]
    [546, 264, 28, 12, -14,  -6]
    [594, 264, 20, 16,  -6,  -7]
}

spriteset(SPRITESET_BULK_LOADED, "gfx/vehiclesroad01.png") {
    [ 82, 392,  8, 18,  -3, -10]
    [ 98, 392, 20, 16, -14,  -7]
    [130, 392, 28, 12, -14,  -6]
    [178, 392, 20, 16,  -6,  -7]
    [210, 392,  8, 18,  -3, -10]
    [226, 392, 20, 16, -14,  -7]
    [258, 392, 28, 12, -14,  -6]
    [306, 392, 20, 16,  -6,  -7]
}

spritegroup spritegroup_bulk_truck {
	loaded: [SPRITESET_BULK_LOADED, SPRITESET_BULK_UNLOADED];
	loading: [SPRITESET_BULK_LOADED, SPRITESET_BULK_UNLOADED];
}


spriteset(spritegroup_clay) {
	//[10 + 20 * 9, 10 + 20 * 1, 10, 10, 0, 0,  "src/graphics/other/cargoicons.png"]
	[0, 11, 10, 10, 0, 0, "gfx/items_dos.png"]
}


spriteset(spritegroup_brick) {
	//left_x, upper_y, width, height, offset_x, offset_y
	[0, 0, 10, 10, 0, 0, "gfx/items_dos2.png"]
}
/*
spriteset(spriteset_claymine) {
	[0, 0, 192, 79, 0, 0, "gfx/claymine.png"]
}
*/

item(FEAT_CARGOS, cargo_clay, 27) {
	property {
		number: 31;
		type_name: string(STR_CARGO_PLURAL_CLAY);
		unit_name: string(STR_CARGO_SINGULAR_CLAY); //for subsidies
		units_of_cargo: string(TTD_STR_TONS);
		items_of_cargo: string(STR_QUANTITY_CLAY);
		type_abbreviation: string(STR_ABBREV_CLAY);
		sprite: NEW_CARGO_SPRITE;
		weight: 1; //1 ton
		penalty_lowerbound: 30; //delivery time until penalty is applied
		single_penalty_length: 255; //length of the interval where a single penalty is applied
		price_factor: 53; //payment for 10 units over 20 squares in GBP
		station_list_colour: 46; //from dos palette
		cargo_payment_list_colour: 46; //from dos palette
		is_freight: 1;
		cargo_classes: bitmask(CC_BULK);
		cargo_label: "CLAY";
		town_growth_effect: TOWNGROWTH_NONE;
		town_growth_multiplier: 0;
		capacity_multiplier: 27;
	}
	
	graphics {
		spritegroup_clay;
	}
} 

item(FEAT_CARGOS, cargo_brick, 26) {
    property {
        type_name: string(STR_CARGO_PLURAL_BRICK);
        unit_name: string(STR_CARGO_SINGULAR_BRICK);
        type_abbreviation: string(STR_ABBREV_BRICK);
        sprite: NEW_CARGO_SPRITE;
        weight: 1.0;
        station_list_colour: 46;
        cargo_payment_list_colour: 46;
        is_freight: 1;
        cargo_classes: bitmask(CC_PIECE_GOODS);
        town_growth_effect: TOWNGROWTH_GOODS; //bricks are powerful
        town_growth_multiplier: 1.0;
        units_of_cargo: TTD_STR_TONS;
        items_of_cargo: string(STR_QUANTITY_BRICK);
        penalty_lowerbound: 30;
        single_penalty_length: 255;
        price_factor: 102;
        capacity_multiplier: 1;
        cargo_label: "BRCK";
        number: 26;
    }
    graphics {
        default: spritegroup_brick;
    }
}


//Brick truck
item(FEAT_ROADVEHS, item_flatbed_truck_1) {
	property {
		//Generic vehicle stuff
		name: string(STR_NAME_BRICK_TRUCK);
		climates_available: bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL); //change because of RIT's weather
		introduction_date: date(1946,01,01);
		model_life: 65;
		vehicle_life: 15;
		reliability_decay: 20;
		refittable_cargo_classes: bitmask(CC_PIECE_GOODS);
		non_refittable_cargo_classes: bitmask(CC_PASSENGERS, CC_LIQUID, CC_REFRIGERATED, CC_EXPRESS, CC_COVERED);
		cargo_allow_refit: [BRCK];
		cargo_disallow_refit: [LVST, STEL, WOOD];//livestock, steel, wood
		default_cargo_type: BRCK;
		loading_speed: 5;
		cost_factor: 108;
		running_cost_factor: 90;
		//Road vehicle stuff
		sprite_id: SPRITE_ID_NEW_ROADVEH;
		speed: 48 km/h;
		misc_flags: bitmask(ROADVEH_FLAG_2CC);
		refit_cost: 0;
		running_cost_base: RUNNING_COST_ROADVEH;
		power: 120 hp;
		weight: 9.5 ton;
		cargo_capacity: 20;
		sound_effect: SOUND_BUS_START_PULL_AWAY;
	}
	
	graphics {
		default: spritegroup_flatbed_truck_1_goods;
	}
}

item(FEAT_ROADVEHS, item_flatbed_truck_2) {
	property {
		//Generic vehicle stuff
		name: string(STR_NAME_CLAY_TRUCK);
		climates_available: bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC); //change because of RIT's weather
		introduction_date: date(1946,01,01);
		model_life: 65;
		vehicle_life: 15;
		reliability_decay: 20;
		refittable_cargo_classes: bitmask(CC_BULK);
		non_refittable_cargo_classes: bitmask(CC_PASSENGERS, CC_LIQUID, CC_REFRIGERATED, CC_EXPRESS, CC_COVERED);
		cargo_allow_refit: [CLAY];
		cargo_disallow_refit: [COAL, GRAI, IORE];//livestock, steel, wood
		default_cargo_type: CLAY;
		loading_speed: 5;
		cost_factor: 108;
		running_cost_factor: 90;
		//Road vehicle stuff
		sprite_id: SPRITE_ID_NEW_ROADVEH;
		speed: 48 km/h;
		misc_flags: bitmask(ROADVEH_FLAG_2CC);
		refit_cost: 0;
		running_cost_base: RUNNING_COST_ROADVEH;
		power: 120 hp;
		weight: 9.5 ton;
		cargo_capacity: 20;
		sound_effect: SOUND_BUS_START_PULL_AWAY;
	}
	
	graphics {
		default: spritegroup_bulk_truck;
	}
}


spritelayout spritelayout_claymine {
	ground {
		sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite:		spriteset_claymine(0);
		xextent: 	192;
		yextent:	79;
		zextent:	0;
		xoffset:	0;
		yoffset:	0;
		zoffset: 	0;
	}
}

/*switch(FEAT_INDUSTRIES, SELF, clay_pit_check_availability_param, restrict_open_during_gameplay) {
	1..255: return CB_RESULT_IND_NO_CONSTRUCTION;         // disallow when restrictions in place
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;       // we may build
}
*/
/*
item(FEAT_INDUSTRIES, industry_claymine, 0x34) {
	property {
		substitute:             0;
		prob_random:            0;
		prob_in_game:           param_spawn_game;  
		life_type: 		IND_LIFE_TYPE_EXTRACTIVE;
		accept_cargo_types:     []; 
		prod_cargo_types:       [cargotype("CLAY")];
		fund_cost_multiplier: 	11;
		prod_multiplier:        [16, 0];
		name: 			string(STR_CLAY_MINE);
		nearby_station_name:    string(STR_STATION, string(STR_TOWN),string(STR_STATION_MINES));
		layouts: 		[claymine_layout];
		map_colour:		0x2F; 
		//spec_flags:             bitmask(IND_FLAG_ONLY_IN_LARGE_TOWNS);
		}
	
	graphics {
                    construction_probability: clay_pit_check_availability;
                    build_prod_change:        57;
                    produce_cargo_arrival:    clay_pit_produce;
                    produce_256_ticks:        clay_pit_produce_256_ticks;
                    monthly_prod_change:      clay_pit_monthly_update;
                    random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
                    location_check:           clay_pit_check_location;
                    extra_text_fund:          return CB_RESULT_NO_TEXT;
                    extra_text_industry:      clay_pit_extra_text;
                    cargo_subtype_display:    clay_pit_cargo_subtype_display;
                    colour:                   switch_colour;
        }
	} */
	
railtypetable {
    RAIL
}

template tmpl_train_4view_88length_high_width_height_offset
	(x2, x3, x4, ew2, ew3, ew4, h1, h2, h3, h4, w, x, y, z,  ox1,ox2, ox3, ox4, oy1,oy2, oy3, oy4) {
	[  0+x, y,  8,     18+z+h1,  -3,      -12 -z]
	[ x2+x, y, 20+ew2, 16+z+h2, -14 +ox2,  -9 -z+oy2]
	[ x3+x, y,  w+ew3, 12+z+h3, -16 +ox3,  -8 -z+oy3]
	[ x4+x, y, 20+ew4, 16+z+h4,  -6 +ox4,  -9 -z+oy4]
}

template tmpl_train_4view_88length_29px_high(x, y, z) {
    /* Slightly odd offsets esp. in the / views */
	tmpl_train_4view_88length_high_width_height_offset
		(16, 48, 96,   0, 0, 0,   4, 0, 0, 0,   29,   x, y, z,  0,0,0,0,  0,0,0,0)
}
// Train, 4 views, 8/8 length (29px) for a height of 12 px
template tmpl_train_4view_88length_29px(x, y) { tmpl_train_4view_88length_29px_high(x, y, 0) }
// temperate rail clay wagon (full)
spriteset(spr2781, "gfx/temperate_railwagons_28px.png") { tmpl_train_4view_88length_29px(  133,   259) }
// temperate rail clay wagon (empty)
spriteset(spr2737, "gfx/temperate_railwagons_28px.png") { tmpl_train_4view_88length_29px(  6,   259) }
spritegroup spritegroup_clay_train {
	loaded: [spr2737, spr2781];
	loading: [spr2737, spr2781];
}
//empty --bricks
spriteset(spr2765, "gfx/temperate_railwagons_28px.png") { tmpl_train_4view_88length_29px(  6,   156) }
//full bricks
spriteset(spr2789, "gfx/temperate_railwagons_28px.png") { tmpl_train_4view_88length_29px(  133,   156) }
spritegroup spritegroup_brick_train {
	loaded: [spr2765, spr2789];
	loading: [spr2765, spr2789];
}

/* Define the actual train */
item(FEAT_TRAINS, item_brick_wagon) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_BRICK_CAR);
        // not available in toyland:
        climates_available:           bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC); 
        introduction_date:            date(1946, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 0;
        reliability_decay:            0;
        refittable_cargo_classes: bitmask(CC_PIECE_GOODS);
		non_refittable_cargo_classes: bitmask(CC_PASSENGERS, CC_LIQUID, CC_REFRIGERATED, CC_EXPRESS, CC_COVERED);
		cargo_allow_refit: [BRCK];
		cargo_disallow_refit: [LVST, STEL, WOOD];//livestock, steel, wood
		default_cargo_type: BRCK;
        loading_speed:                18; 
        cost_factor:                  1.0;
        running_cost_factor:          0;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        speed:                        999 km/h; // initial Bricc
        misc_flags:                   bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT); //Train_flag_tilt makes the cart drift in corners.
        refit_cost:                   0; //refit costs don't apply to subcargo display 
        // callback flags are not set manually
        track_type:                   RAIL; // from rail type table
        ai_special_flag:              AI_FLAG_CARGO;
        power:                        0 kW; // Changed by CB
        running_cost_base:            RUNNING_COST_NONE;
        dual_headed:                  0;
        cargo_capacity:               40; // per part, changed by callback
        weight:                       144 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        //engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        // 4/12 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 3; // changed by callback
        air_drag_coefficient:         0.06;
        //shorten_vehicle:              SHORTEN_TO_8_8;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default:                      spritegroup_brick_train; //We should find some grapics about this. I'll just leave an error so that when it compiles we will know.
    }
}
	
item(FEAT_TRAINS, item_clay_wagon) {
    /* Define properties first, make sure to set all of them */
    property {
        name:                         string(STR_NAME_CLAY_CAR);
        // not available in toyland:
        climates_available:           bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC); 
        introduction_date:            date(1946, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 0;
        reliability_decay:            0;
        refittable_cargo_classes: bitmask(CC_BULK);
		non_refittable_cargo_classes: bitmask(CC_PASSENGERS, CC_LIQUID, CC_REFRIGERATED, CC_EXPRESS, CC_COVERED);
		cargo_allow_refit: [CLAY];
		cargo_disallow_refit: [COAL, GRAI, IORE];
		default_cargo_type: CLAY;
        loading_speed:                18; 
        cost_factor:                  1.0;
        running_cost_factor:          0;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        speed:                        999 km/h; // initial Bricc
        misc_flags:                   bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_TILT); //Train_flag_tilt makes the cart drift in corners.
        refit_cost:                   0; //refit costs don't apply to subcargo display 
        // callback flags are not set manually
        track_type:                   RAIL; // from rail type table
        ai_special_flag:              AI_FLAG_CARGO;
        power:                        0 kW; // Changed by CB
        running_cost_base:            RUNNING_COST_NONE;
        dual_headed:                  0;
        cargo_capacity:               40; // per part, changed by callback
        weight:                       144 ton; // Total, changed by callback
        ai_engine_rank:               0; // not intended to be used by the ai
        //engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        // 4/12 of weight on driving wheels, with a default friction coefficient of 0.3:
        tractive_effort_coefficient:  0.3 / 3; // changed by callback
        air_drag_coefficient:         0.06;
        //shorten_vehicle:              SHORTEN_TO_8_8;
        // Overridden by callback to disable for non-powered wagons:
        visual_effect_and_powered:    visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 2, DISABLE_WAGON_POWER);
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default:                      spritegroup_clay_train; //We should find some grapics about this. I'll just leave an error so that when it compiles we will know.
    }
}

replace spr4712(4712, "gfx/ToyFactory1.png") { [ 158,   31,  27, 138, -14, -70] }
replace spr4713(4713, "gfx/ToyFactory1.png") { [  94,    1,  64, 168, -46, -116, NOCROP] }
replace spr4714(4714, "gfx/ToyFactory1.png") { [   2,   31,   2,   2,  52,  50] }
replace spr4715(4715, "gfx/ToyFactory1.png") { [  38,   31,  60, 138, -38, -118] }
replace spr4716(4716, "gfx/ToyFactory1.png") { [   2,   31,  37, 138, -43, -102] } // wheel

produce(clay_cargo_arrive_produce, 4, 4, 4, 3, 0, 1);

item(FEAT_INDUSTRIES, industry_claymine, 31) {
   graphics {
      produce_cargo_arrival: clay_cargo_arrive_produce;
   }
   property {
      substitute: 31;
      override: 31;
      prod_cargo_types: [CLAY];
      accept_cargo_types: [ALOY,CHEM,PLST];
      prod_multiplier: [15];
      name: string(STR_CLAY_MINE);
      nearby_station_name: string(STR_STATION, string(STR_TOWN), string(STR_CLAY_MINE));
      life_type: IND_LIFE_TYPE_PROCESSING;
      closure_msg: TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
      prod_increase_msg: TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
      prod_decrease_msg: TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
      new_ind_msg: TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
      min_cargo_distr: 5;
      conflicting_ind_types: [];
      input_multiplier_1: [0, 0];
      input_multiplier_2: [0, 0];
      input_multiplier_3: [0, 0];
      prob_random: 5;
      prob_in_game: 3;
      prospect_chance: 0.75;
      fund_cost_multiplier: 100;
      remove_cost_multiplier: 0;
   }
}

item(FEAT_INDUSTRYTILES, industry_clay_tile_142, 142) {
   property {
      substitute:               142;
      override:               142;
      accepted_cargos:         [[ALOY,8],[CHEM,8],[PLST,8]];
   }
}
item(FEAT_INDUSTRYTILES, industry_clay_tile_143, 143) {
   property {
      substitute:               143;
      override:               143;
      accepted_cargos:         [[ALOY,8],[CHEM,8],[PLST,8]];
   }
}
item(FEAT_INDUSTRYTILES, industry_clay_tile_144, 144) {
   property {
      substitute:               144;
      override:               144;
      accepted_cargos:         [[ALOY,8],[CHEM,8],[PLST,8]];
   }
}
item(FEAT_INDUSTRYTILES, industry_clay_tile_145, 145) {
   property {
      substitute:               145;
      override:               145;
      accepted_cargos:         [[ALOY,8],[CHEM,8],[PLST,8]];
   }
}
item(FEAT_INDUSTRYTILES, industry_clay_tile_146, 146) {
   property {
      substitute:               146;
      override:               146;
      accepted_cargos:         [[ALOY,8],[CHEM,8],[PLST,8]];
   }
}
item(FEAT_INDUSTRYTILES, industry_clay_tile_147, 147) {
   property {
      substitute:               147;
      override:               147;
      accepted_cargos:         [[ALOY,8],[CHEM,8],[PLST,8]];
   }
}